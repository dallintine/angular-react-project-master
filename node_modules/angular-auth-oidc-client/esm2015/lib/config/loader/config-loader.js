export class OpenIdConfigLoader {
}
export class StsConfigLoader {
}
export class StsConfigStaticLoader {
    constructor(passedConfigs) {
        this.passedConfigs = passedConfigs;
    }
    loadConfigs() {
        if (Array.isArray(this.passedConfigs)) {
            const allInstantStaticPromises = this.passedConfigs.map((x) => new Promise((resolve, _) => resolve(x)));
            return allInstantStaticPromises;
        }
        const singleStaticPromise = new Promise((resolve, _) => resolve(this.passedConfigs));
        return [singleStaticPromise];
    }
}
export class StsConfigHttpLoader {
    constructor(configs$) {
        this.configs$ = configs$;
    }
    loadConfigs() {
        return Array.isArray(this.configs$) ? this.configs$ : [this.configs$];
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLWxvYWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2FuZ3VsYXItYXV0aC1vaWRjLWNsaWVudC9zcmMvbGliL2NvbmZpZy9sb2FkZXIvY29uZmlnLWxvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLE9BQU8sa0JBQWtCO0NBRTlCO0FBRUQsTUFBTSxPQUFnQixlQUFlO0NBRXBDO0FBRUQsTUFBTSxPQUFPLHFCQUFxQjtJQUNoQyxZQUFvQixhQUEwRDtRQUExRCxrQkFBYSxHQUFiLGFBQWEsQ0FBNkM7SUFBRyxDQUFDO0lBRWxGLFdBQVc7UUFDVCxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxFQUFFO1lBQ3JDLE1BQU0sd0JBQXdCLEdBQUcsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUV4RyxPQUFPLHdCQUF3QixDQUFDO1NBQ2pDO1FBRUQsTUFBTSxtQkFBbUIsR0FBRyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUMsQ0FBQztRQUVyRixPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUMvQixDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sbUJBQW1CO0lBQzlCLFlBQW9CLFFBQXVFO1FBQXZFLGFBQVEsR0FBUixRQUFRLENBQStEO0lBQUcsQ0FBQztJQUUvRixXQUFXO1FBQ1QsT0FBTyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEUsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9wZW5JZENvbmZpZ3VyYXRpb24gfSBmcm9tICcuLi9vcGVuaWQtY29uZmlndXJhdGlvbic7XG5cbmV4cG9ydCBjbGFzcyBPcGVuSWRDb25maWdMb2FkZXIge1xuICBsb2FkZXI/OiBQcm92aWRlcjtcbn1cblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIFN0c0NvbmZpZ0xvYWRlciB7XG4gIGFic3RyYWN0IGxvYWRDb25maWdzKCk6IFByb21pc2U8T3BlbklkQ29uZmlndXJhdGlvbj5bXTtcbn1cblxuZXhwb3J0IGNsYXNzIFN0c0NvbmZpZ1N0YXRpY0xvYWRlciBpbXBsZW1lbnRzIFN0c0NvbmZpZ0xvYWRlciB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGFzc2VkQ29uZmlnczogT3BlbklkQ29uZmlndXJhdGlvbiB8IE9wZW5JZENvbmZpZ3VyYXRpb25bXSkge31cblxuICBsb2FkQ29uZmlncygpOiBQcm9taXNlPE9wZW5JZENvbmZpZ3VyYXRpb24+W10ge1xuICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMucGFzc2VkQ29uZmlncykpIHtcbiAgICAgIGNvbnN0IGFsbEluc3RhbnRTdGF0aWNQcm9taXNlcyA9IHRoaXMucGFzc2VkQ29uZmlncy5tYXAoKHgpID0+IG5ldyBQcm9taXNlKChyZXNvbHZlLCBfKSA9PiByZXNvbHZlKHgpKSk7XG5cbiAgICAgIHJldHVybiBhbGxJbnN0YW50U3RhdGljUHJvbWlzZXM7XG4gICAgfVxuXG4gICAgY29uc3Qgc2luZ2xlU3RhdGljUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCBfKSA9PiByZXNvbHZlKHRoaXMucGFzc2VkQ29uZmlncykpO1xuXG4gICAgcmV0dXJuIFtzaW5nbGVTdGF0aWNQcm9taXNlXTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RzQ29uZmlnSHR0cExvYWRlciBpbXBsZW1lbnRzIFN0c0NvbmZpZ0xvYWRlciB7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgY29uZmlncyQ6IFByb21pc2U8T3BlbklkQ29uZmlndXJhdGlvbj4gfCBQcm9taXNlPE9wZW5JZENvbmZpZ3VyYXRpb24+W10pIHt9XG5cbiAgbG9hZENvbmZpZ3MoKTogUHJvbWlzZTxPcGVuSWRDb25maWd1cmF0aW9uPltdIHtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheSh0aGlzLmNvbmZpZ3MkKSA/IHRoaXMuY29uZmlncyQgOiBbdGhpcy5jb25maWdzJF07XG4gIH1cbn1cbiJdfQ==