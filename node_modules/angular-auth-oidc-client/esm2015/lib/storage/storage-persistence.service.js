import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./browser-storage.service";
export class StoragePersistenceService {
    constructor(browserStorageService) {
        this.browserStorageService = browserStorageService;
    }
    read(key, configId) {
        const storedConfig = this.browserStorageService.read(key, configId) || {};
        return storedConfig[key];
    }
    write(key, value, configId) {
        const storedConfig = this.browserStorageService.read(key, configId) || {};
        storedConfig[key] = value;
        this.browserStorageService.write(storedConfig, configId);
    }
    remove(key, configId) {
        const storedConfig = this.browserStorageService.read(key, configId) || {};
        delete storedConfig[key];
        this.browserStorageService.write(storedConfig, configId);
    }
    clear(configId) {
        this.browserStorageService.clear(configId);
    }
    resetStorageFlowData(configId) {
        this.remove('session_state', configId);
        this.remove('storageSilentRenewRunning', configId);
        this.remove('codeVerifier', configId);
        this.remove('userData', configId);
        this.remove('storageCustomParamsAuthRequest', configId);
        this.remove('access_token_expires_at', configId);
        this.remove('storageCustomParamsRefresh', configId);
        this.remove('storageCustomParamsEndSession', configId);
    }
    resetAuthStateInStorage(configId) {
        this.remove('authzData', configId);
        this.remove('authnResult', configId);
    }
    getAccessToken(configId) {
        return this.read('authzData', configId);
    }
    getIdToken(configId) {
        var _a;
        return (_a = this.read('authnResult', configId)) === null || _a === void 0 ? void 0 : _a.id_token;
    }
    getRefreshToken(configId) {
        var _a;
        return (_a = this.read('authnResult', configId)) === null || _a === void 0 ? void 0 : _a.refresh_token;
    }
    getAuthenticationResult(configId) {
        return this.read('authnResult', configId);
    }
}
StoragePersistenceService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: StoragePersistenceService, deps: [{ token: i1.BrowserStorageService }], target: i0.ɵɵFactoryTarget.Injectable });
StoragePersistenceService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: StoragePersistenceService });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.4", ngImport: i0, type: StoragePersistenceService, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.BrowserStorageService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS1wZXJzaXN0ZW5jZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYW5ndWxhci1hdXRoLW9pZGMtY2xpZW50L3NyYy9saWIvc3RvcmFnZS9zdG9yYWdlLXBlcnNpc3RlbmNlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7O0FBc0IzQyxNQUFNLE9BQU8seUJBQXlCO0lBQ3BDLFlBQTZCLHFCQUE0QztRQUE1QywwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO0lBQUcsQ0FBQztJQUU3RSxJQUFJLENBQUMsR0FBZ0IsRUFBRSxRQUFnQjtRQUNyQyxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFMUUsT0FBTyxZQUFZLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVELEtBQUssQ0FBQyxHQUFnQixFQUFFLEtBQVUsRUFBRSxRQUFnQjtRQUNsRCxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7UUFFMUUsWUFBWSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUMxQixJQUFJLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDLFlBQVksRUFBRSxRQUFRLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRUQsTUFBTSxDQUFDLEdBQWdCLEVBQUUsUUFBZ0I7UUFDdkMsTUFBTSxZQUFZLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBRTFFLE9BQU8sWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRXpCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsWUFBWSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQzNELENBQUM7SUFFRCxLQUFLLENBQUMsUUFBZ0I7UUFDcEIsSUFBSSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUM3QyxDQUFDO0lBRUQsb0JBQW9CLENBQUMsUUFBZ0I7UUFDbkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDdkMsSUFBSSxDQUFDLE1BQU0sQ0FBQywyQkFBMkIsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNuRCxJQUFJLENBQUMsTUFBTSxDQUFDLGNBQWMsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNsQyxJQUFJLENBQUMsTUFBTSxDQUFDLGdDQUFnQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQ3hELElBQUksQ0FBQyxNQUFNLENBQUMseUJBQXlCLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDakQsSUFBSSxDQUFDLE1BQU0sQ0FBQyw0QkFBNEIsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNwRCxJQUFJLENBQUMsTUFBTSxDQUFDLCtCQUErQixFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFRCx1QkFBdUIsQ0FBQyxRQUFnQjtRQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUN2QyxDQUFDO0lBRUQsY0FBYyxDQUFDLFFBQWdCO1FBQzdCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELFVBQVUsQ0FBQyxRQUFnQjs7UUFDekIsT0FBTyxNQUFBLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQywwQ0FBRSxRQUFRLENBQUM7SUFDdEQsQ0FBQztJQUVELGVBQWUsQ0FBQyxRQUFnQjs7UUFDOUIsT0FBTyxNQUFBLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQywwQ0FBRSxhQUFhLENBQUM7SUFDM0QsQ0FBQztJQUVELHVCQUF1QixDQUFDLFFBQWdCO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsUUFBUSxDQUFDLENBQUM7SUFDNUMsQ0FBQzs7c0hBMURVLHlCQUF5QjswSEFBekIseUJBQXlCOzJGQUF6Qix5QkFBeUI7a0JBRHJDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCcm93c2VyU3RvcmFnZVNlcnZpY2UgfSBmcm9tICcuL2Jyb3dzZXItc3RvcmFnZS5zZXJ2aWNlJztcblxuZXhwb3J0IHR5cGUgU3RvcmFnZUtleXMgPVxuICB8ICdhdXRoblJlc3VsdCdcbiAgfCAnYXV0aHpEYXRhJ1xuICB8ICdhY2Nlc3NfdG9rZW5fZXhwaXJlc19hdCdcbiAgfCAnYXV0aFdlbGxLbm93bkVuZFBvaW50cydcbiAgfCAndXNlckRhdGEnXG4gIHwgJ2F1dGhOb25jZSdcbiAgfCAnY29kZVZlcmlmaWVyJ1xuICB8ICdhdXRoU3RhdGVDb250cm9sJ1xuICB8ICdzZXNzaW9uX3N0YXRlJ1xuICB8ICdzdG9yYWdlU2lsZW50UmVuZXdSdW5uaW5nJ1xuICB8ICdzdG9yYWdlQ3VzdG9tUGFyYW1zQXV0aFJlcXVlc3QnXG4gIHwgJ3N0b3JhZ2VDdXN0b21QYXJhbXNSZWZyZXNoJ1xuICB8ICdzdG9yYWdlQ3VzdG9tUGFyYW1zRW5kU2Vzc2lvbidcbiAgfCAncmVkaXJlY3QnXG4gIHwgJ2NvbmZpZ0lkcydcbiAgfCAnand0S2V5cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTdG9yYWdlUGVyc2lzdGVuY2VTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSByZWFkb25seSBicm93c2VyU3RvcmFnZVNlcnZpY2U6IEJyb3dzZXJTdG9yYWdlU2VydmljZSkge31cblxuICByZWFkKGtleTogU3RvcmFnZUtleXMsIGNvbmZpZ0lkOiBzdHJpbmcpOiBhbnkge1xuICAgIGNvbnN0IHN0b3JlZENvbmZpZyA9IHRoaXMuYnJvd3NlclN0b3JhZ2VTZXJ2aWNlLnJlYWQoa2V5LCBjb25maWdJZCkgfHwge307XG5cbiAgICByZXR1cm4gc3RvcmVkQ29uZmlnW2tleV07XG4gIH1cblxuICB3cml0ZShrZXk6IFN0b3JhZ2VLZXlzLCB2YWx1ZTogYW55LCBjb25maWdJZDogc3RyaW5nKTogdm9pZCB7XG4gICAgY29uc3Qgc3RvcmVkQ29uZmlnID0gdGhpcy5icm93c2VyU3RvcmFnZVNlcnZpY2UucmVhZChrZXksIGNvbmZpZ0lkKSB8fCB7fTtcblxuICAgIHN0b3JlZENvbmZpZ1trZXldID0gdmFsdWU7XG4gICAgdGhpcy5icm93c2VyU3RvcmFnZVNlcnZpY2Uud3JpdGUoc3RvcmVkQ29uZmlnLCBjb25maWdJZCk7XG4gIH1cblxuICByZW1vdmUoa2V5OiBTdG9yYWdlS2V5cywgY29uZmlnSWQ6IHN0cmluZyk6IHZvaWQge1xuICAgIGNvbnN0IHN0b3JlZENvbmZpZyA9IHRoaXMuYnJvd3NlclN0b3JhZ2VTZXJ2aWNlLnJlYWQoa2V5LCBjb25maWdJZCkgfHwge307XG5cbiAgICBkZWxldGUgc3RvcmVkQ29uZmlnW2tleV07XG5cbiAgICB0aGlzLmJyb3dzZXJTdG9yYWdlU2VydmljZS53cml0ZShzdG9yZWRDb25maWcsIGNvbmZpZ0lkKTtcbiAgfVxuXG4gIGNsZWFyKGNvbmZpZ0lkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLmJyb3dzZXJTdG9yYWdlU2VydmljZS5jbGVhcihjb25maWdJZCk7XG4gIH1cblxuICByZXNldFN0b3JhZ2VGbG93RGF0YShjb25maWdJZDogc3RyaW5nKTogdm9pZCB7XG4gICAgdGhpcy5yZW1vdmUoJ3Nlc3Npb25fc3RhdGUnLCBjb25maWdJZCk7XG4gICAgdGhpcy5yZW1vdmUoJ3N0b3JhZ2VTaWxlbnRSZW5ld1J1bm5pbmcnLCBjb25maWdJZCk7XG4gICAgdGhpcy5yZW1vdmUoJ2NvZGVWZXJpZmllcicsIGNvbmZpZ0lkKTtcbiAgICB0aGlzLnJlbW92ZSgndXNlckRhdGEnLCBjb25maWdJZCk7XG4gICAgdGhpcy5yZW1vdmUoJ3N0b3JhZ2VDdXN0b21QYXJhbXNBdXRoUmVxdWVzdCcsIGNvbmZpZ0lkKTtcbiAgICB0aGlzLnJlbW92ZSgnYWNjZXNzX3Rva2VuX2V4cGlyZXNfYXQnLCBjb25maWdJZCk7XG4gICAgdGhpcy5yZW1vdmUoJ3N0b3JhZ2VDdXN0b21QYXJhbXNSZWZyZXNoJywgY29uZmlnSWQpO1xuICAgIHRoaXMucmVtb3ZlKCdzdG9yYWdlQ3VzdG9tUGFyYW1zRW5kU2Vzc2lvbicsIGNvbmZpZ0lkKTtcbiAgfVxuXG4gIHJlc2V0QXV0aFN0YXRlSW5TdG9yYWdlKGNvbmZpZ0lkOiBzdHJpbmcpOiB2b2lkIHtcbiAgICB0aGlzLnJlbW92ZSgnYXV0aHpEYXRhJywgY29uZmlnSWQpO1xuICAgIHRoaXMucmVtb3ZlKCdhdXRoblJlc3VsdCcsIGNvbmZpZ0lkKTtcbiAgfVxuXG4gIGdldEFjY2Vzc1Rva2VuKGNvbmZpZ0lkOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnJlYWQoJ2F1dGh6RGF0YScsIGNvbmZpZ0lkKTtcbiAgfVxuXG4gIGdldElkVG9rZW4oY29uZmlnSWQ6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRoaXMucmVhZCgnYXV0aG5SZXN1bHQnLCBjb25maWdJZCk/LmlkX3Rva2VuO1xuICB9XG5cbiAgZ2V0UmVmcmVzaFRva2VuKGNvbmZpZ0lkOiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLnJlYWQoJ2F1dGhuUmVzdWx0JywgY29uZmlnSWQpPy5yZWZyZXNoX3Rva2VuO1xuICB9XG5cbiAgZ2V0QXV0aGVudGljYXRpb25SZXN1bHQoY29uZmlnSWQ6IHN0cmluZyk6IGFueSB7XG4gICAgcmV0dXJuIHRoaXMucmVhZCgnYXV0aG5SZXN1bHQnLCBjb25maWdJZCk7XG4gIH1cbn1cbiJdfQ==